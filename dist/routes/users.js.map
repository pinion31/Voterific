{"version":3,"sources":["../../server/routes/users.js"],"names":["express","require","router","Router","bcrypt","db","post","req","res","collection","find","name","body","toArray","err","user","length","status","send","genSalt","salt","hash","password","newUser","insertOne","findAndModify","$set","loggedIn","upsert","result","new","json","value","compare","match","login","response","module","exports"],"mappings":"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","file":"users.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst bcrypt = require('bcryptjs');\r\nlet db;\r\n\r\nrouter.post('/addUser', (req, res) => {\r\n  db = req.db;\r\n  db.collection('users').find({name: req.body.name}).toArray((err, user) => {\r\n    if (err) return err;\r\n    if (user.length > 0) {\r\n      res.status(400).send(false);\r\n    } else {\r\n      bcrypt.genSalt(10, (err, salt) => {\r\n        bcrypt.hash(req.body.password, salt, (err, hash) => {\r\n          const newUser = req.body;\r\n          newUser.password = hash;\r\n\r\n          db.collection('users').insertOne(newUser, () => {\r\n            res.status(201).send(true);\r\n          });\r\n        });\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\nrouter.post('/logOut', (req, res) => {\r\n  db = req.db;\r\n  db.collection('users').findAndModify(\r\n    {name: req.body.name},\r\n    {}, // this must be here to work\r\n    {$set: {loggedIn: false}},\r\n    {upsert: true},\r\n    (err, result) => {\r\n      if (err) { return err; }\r\n      res.send(result);\r\n    },\r\n  );\r\n});\r\n\r\nrouter.post('/logIn', (req, res) => {\r\n  db = req.db;\r\n  db.collection('users').findAndModify(\r\n    {name: req.body.name},\r\n    {},\r\n    {$set: {loggedIn: true}},\r\n    {new: true},\r\n    (err, user) => {\r\n      if (err) { res.json(err); }\r\n      if (user.value) {\r\n        bcrypt.compare(req.body.password, user.value.password, (err, match) => {\r\n          if (match) {\r\n            res.json({login: 'success', response: user.value});\r\n          } else {\r\n            res.json({login: 'fail', response: 'Invalid Password'});\r\n          }\r\n        });\r\n      } else {\r\n        res.json({login: 'fail', response: 'Invalid User'});\r\n      }\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}