{"version":3,"sources":["../../server/routes/polls.js"],"names":["express","require","router","Router","ObjectId","db","post","req","res","collection","find","name","body","toArray","err","user","userCopy","polls","filter","poll","id","findAndModify","$set","new","upsert","result","send","insertOne","then","owner","$push","insertedId","response","get","users","forEach","concat","userPoll","params","toString","newChoices","Array","from","choices","_id","update","module","exports"],"mappings":"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","file":"polls.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst ObjectId = require('mongodb').ObjectId;\r\nlet db;\r\n\r\nrouter.post('/deletePollForUsers', (req, res) => {\r\n  db = req.db;\r\n\r\n  db.collection('users').find({name: req.body.name})\r\n    .toArray((err, user) => {\r\n      if (err) throw err;\r\n      const userCopy = user;\r\n\r\n      userCopy[0].polls = userCopy[0].polls.filter((poll) => {\r\n        if (poll.id !== req.body.id) {\r\n          return poll;\r\n        }\r\n      });\r\n\r\n      db.collection('users').findAndModify(\r\n        {name: req.body.name},\r\n        {},\r\n        {$set: {polls: userCopy[0].polls}},\r\n        {new: true},\r\n        {upsert: true},\r\n        (err, result) => {\r\n          if (err) throw err;\r\n          res.send(result);\r\n        },\r\n      );\r\n    });\r\n});\r\n\r\n//* *************ADD POLL***************************\r\n\r\nrouter.post('/addPoll', (req, res) => {\r\n  db = req.db;\r\n  db.collection('polls').insertOne(req.body)\r\n    .then((result) => {\r\n       db.collection('users').findAndModify(\r\n        {name: req.body.owner},\r\n        {}, // this must be here to work\r\n        {$push: {polls: result.insertedId}}, // add _id of new poll to\r\n        {upsert: true},                   // owner poll array\r\n        (err, response) => {\r\n          if (err) { throw err; }\r\n          res.send(req.body); //send poll back\r\n        },\r\n        );\r\n    });\r\n});\r\n\r\n//* *************GET POLLS***************************\r\n\r\n// returns all user polls\r\nrouter.get('/getAllPolls', (req, res) => {\r\n  db = req.db;\r\n  let polls = [];\r\n  db.collection('users').find({}).toArray((err, users) => {\r\n    if (err) { throw err; }\r\n\r\n    users.forEach((user) => {\r\n      polls = polls.concat(user.polls);\r\n    });\r\n\r\n    res.send(polls);\r\n  });\r\n});\r\n\r\nrouter.get('/:name/:id', (req, res) => {\r\n  db = req.db;\r\n  let userPoll = {};\r\n\r\n  db.collection('users').find({name: req.params.name}).toArray((err, user) => {\r\n    if (err) { throw err; }\r\n\r\n    user[0].polls.forEach((poll) => {\r\n      if (poll.id.toString() === req.params.id.toString()) {\r\n        userPoll = poll;\r\n      }\r\n    });\r\n\r\n    res.send(userPoll);\r\n  });\r\n});\r\n\r\n//* *************ANSWER POLL***************************\r\n\r\n// input: {question: String, choices:Array, _id:String, owner:String }\r\n// output: updated poll ({question: String, choices:Array, _id:String, owner:String })\r\nrouter.post('/answerPollForUsers', (req, res) => {\r\n  db = req.db;\r\n  const newChoices = Array.from(req.body.choices);\r\n  db.collection('polls').findAndModify(\r\n    {_id: ObjectId(req.body._id)},\r\n    {},\r\n    {$set:{ choices: newChoices}},\r\n    {update: true},\r\n    (err, poll) => {\r\n      if (err) { throw err; }\r\n      res.send(poll);\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}