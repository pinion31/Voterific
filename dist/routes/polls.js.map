{"version":3,"sources":["../../server/routes/polls.js"],"names":["express","require","router","Router","ObjectId","db","post","req","res","collection","deleteOne","_id","body","id","newPolls","user","polls","pollListToInsertIntoDB","filter","poll","push","findAndModify","name","$set","update","new","err","send","value","loggedIn","insertOne","then","result","owner","$push","insertedId","get","find","toArray","newChoices","Array","from","choices","module","exports"],"mappings":"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","file":"polls.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst ObjectId = require('mongodb').ObjectId;\r\nlet db;\r\n\r\n// input: {id: String, user:{user:String, polls: Array, loggedIn: Boolean }}\r\n// output: polls:[] (newPolls minus deletedPoll)\r\nrouter.post('/deletePollForUsers', (req, res) => {\r\n  db = req.db;\r\n  db.collection('polls').deleteOne({_id: ObjectId(req.body.id)}, () => {\r\n\r\n    let newPolls = req.body.user.polls;\r\n    const pollListToInsertIntoDB = [];\r\n\r\n    // simultaneously created updated array of _ids to insert into user db\r\n    // and creates new array of polls to send back to client\r\n    newPolls = newPolls.filter((poll) => {\r\n      if (poll._id !== req.body.id) {\r\n        pollListToInsertIntoDB.push(poll._id); // adds id here\r\n        return poll;\r\n      }\r\n    });\r\n\r\n    // insert new list of ids into user.polls\r\n    db.collection('users').findAndModify(\r\n      {name: req.body.user.name},\r\n      {}, // this must be here to work\r\n      {$set: {polls: pollListToInsertIntoDB}},\r\n      {update: true, new: true},\r\n      (err, user) => {\r\n        if (err) {throw err;}\r\n        res.send({user: user.value.name, loggedIn: true, polls: newPolls}); // sends back updated array of polls to client\r\n      });\r\n  });\r\n});\r\n\r\n//* *************ADD POLL***************************\r\n\r\nrouter.post('/addPoll', (req, res) => {\r\n  db = req.db;\r\n  db.collection('polls').insertOne(req.body.poll)\r\n    .then((result) => {\r\n      db.collection('users').findAndModify(\r\n        {name: req.body.poll.owner},\r\n        {}, // this must be here to work\r\n        {$push: {polls: result.insertedId}}, // add _id of new poll to\r\n        {new: true },                   // owner poll array\r\n        (err) => {\r\n          if (err) { throw err; }\r\n          res.send({\r\n            user: req.body.user.user,\r\n            loggedIn: true,\r\n            polls: [...req.body.user.polls, req.body.poll]\r\n          }); // send user with polls back\r\n        },\r\n      );\r\n    });\r\n});\r\n\r\n//* *************GET POLLS***************************\r\n\r\n// returns all user polls\r\nrouter.get('/getAllPolls', (req, res) => {\r\n  db = req.db;\r\n  db.collection('polls').find({}).toArray((err, polls) => {\r\n    if (err) { throw err; }\r\n      res.send(polls);\r\n  });\r\n});\r\n\r\n//* *************ANSWER POLL***************************\r\n\r\n// input: {user: {user:String, loggedIn: true, polls: Array },\r\n// poll: {_id:String, question: String, choices: Array, owner: Strgin}\r\n// output: (user with updated poll) {user: {user:String, loggedIn: true, polls: Array },\r\nrouter.post('/answerPollForUsers', (req, res) => {\r\n  db = req.db;\r\n\r\n  const newChoices = Array.from(req.body.poll.choices);\r\n  db.collection('polls').findAndModify(\r\n    {_id: ObjectId(req.body.poll._id)},\r\n    {},\r\n    {$set:{ choices: newChoices}},\r\n    {update: true},\r\n    (err, poll) => {\r\n      if (err) { throw err; }\r\n      res.send({\r\n        user: req.body.user.user,\r\n        loggedIn: true,\r\n        polls: [...req.body.user.polls]\r\n      });\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}