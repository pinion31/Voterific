{"version":3,"sources":["../server/server.js"],"names":["install","dbUrl","connect","err","db","console","log","app","use","static","json","post","req","res","collection","insertOne","body","send","findAndModify","name","owner","$push","polls","$inc","counter","upsert","result","get","find","toArray","params","id","user","userCopy","map","poll","choices","choice","answer","votes","$set","new","result2","dir","loggedIn","value","password","login","response","listen"],"mappings":"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","file":"server.js","sourcesContent":["//'use strict'\r\nimport 'babel-polyfill';\r\nimport SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport {MongoClient} from 'mongodb';\r\n\r\n\r\n//let dbUrl = 'mongodb://127.0.0.1:27017/mydb'; //local db\r\nlet dbUrl = 'mongodb://localhost/local'; //local db\r\n\r\nMongoClient.connect(dbUrl, (err, db) => {\r\n  if (err) {return err};\r\n\r\n  console.log('db connected');\r\n\r\n\r\n  const app = express();\r\n\r\n  app.use(express.static('static'));\r\n  app.use(bodyParser.json());\r\n\r\n  app.post('/addUser', (req,res) => {\r\n\r\n    db.collection('users').insertOne(req.body, () => {\r\n      console.log('new user added to database');\r\n      res.send('user added');\r\n    });\r\n  });\r\n\r\n//**************DELETE POLL***************************\r\n\r\n/*\r\n  app.post('/deletePollForUsers', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.owner},\r\n          {},  //this must be here to work\r\n          {$push:{polls:req.body}, $inc:{counter:1}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n          }\r\n      );\r\n  });*/\r\n\r\n  //adds polls to collective list\r\n  app.post('/deletePollForAll',(req,res) => {\r\n         db.collection('polls').findAndModify(\r\n          {name: req.body.owner},\r\n          {},  //this must be here to work\r\n          {$push:{polls:req.body}, $inc:{counter:1}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n          }\r\n      );\r\n  });\r\n\r\n//**************ADD POLL***************************\r\n\r\n  app.post('/addPoll', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.owner},\r\n          {},  //this must be here to work\r\n          {$push:{polls:req.body}, $inc:{counter:1}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n          }\r\n      );\r\n  });\r\n\r\n  //adds polls to collective list\r\n  app.post('/addPollToAll',(req,res) => {\r\n         db.collection('polls').insertOne(\r\n          req.body,\r\n          (err,result) => {\r\n            if (err) {return err};\r\n            res.send(result);\r\n          }\r\n       );\r\n  });\r\n\r\n\r\n//**************GET POLLS***************************\r\n\r\n  //returns all user polls\r\n  app.get('/getAllPolls', (req,res) => {\r\n      db.collection('polls').find({}).toArray((err,result) => {\r\n        if (err) {return err};\r\n        //console.dir(result);\r\n        res.send(result);\r\n      });\r\n  });\r\n\r\n  app.get('/poll/:name/:id', (req,res) => {\r\n      db.collection('polls').find({owner:req.params.name, id:req.params.id}).toArray((err,result) => {\r\n        if (err) {return err};\r\n        //console.dir(result);\r\n        res.send(result);\r\n      });\r\n  });\r\n\r\n//**************ANSWER POLL***************************\r\n\r\n  app.post('/answerPollForUsers', (req,res) => {\r\n      db.collection('users').find({name:req.body.name}).toArray((err,user) => {\r\n        if (err) return err;\r\n\r\n        let userCopy = user;\r\n        userCopy[0].polls.map((poll) => {\r\n           if (poll.id === req.body.id) {\r\n              poll.choices.map((choice => {\r\n                if (choice.choice === req.body.answer) {\r\n                  choice.votes++;\r\n                }\r\n              }));\r\n           }\r\n        });\r\n\r\n        db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},\r\n          {$set:{polls:userCopy[0].polls}},\r\n          {new:true},\r\n          {upsert:true},\r\n          function(err, result) {\r\n            if (err) return err;\r\n           // res.send(result);\r\n          }\r\n          );\r\n\r\n      });\r\n\r\n\r\n  });\r\n\r\n  app.post('/answerPollForAll', (req,res) => {\r\n       db.collection('polls').find(\r\n        {\"choices.choice\":req.body.answer})\r\n       .toArray(\r\n          (err, result) => {\r\n            if (err) return err;\r\n            let poll = result;\r\n\r\n            poll[0].choices.map((answer) => {\r\n              if (answer.choice === req.body.answer) {\r\n                answer.votes++;\r\n              }\r\n            });\r\n\r\n            db.collection('polls').findAndModify(\r\n                {\"choices.choice\":req.body.answer},\r\n                {},\r\n                {$set:{choices: poll[0].choices}},\r\n                {new:true},\r\n                {upsert:true},\r\n                function(err, result2) {\r\n\r\n                  console.log(result2);\r\n                  if (err) {console.dir(err);};\r\n                  res.send(result2);\r\n                }\r\n            );\r\n          }\r\n        );\r\n  });\r\n\r\n//**************LOG OUT***************************\r\n\r\n  app.post('/logOut', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},  //this must be here to work\r\n          {$set: {loggedIn:false}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n           }\r\n      );\r\n  });\r\n//**************LOG IN***************************\r\n  app.post('/logIn', (req,res) => {\r\n\r\n       db.collection('users').findAndModify(\r\n          {name:req.body.name},\r\n          {},\r\n          {$set: {loggedIn:true}}, //true is being set for correct login but wrong password\r\n          {new:true},\r\n          (err, user) => {\r\n          if (err) {res.json(err);}\r\n\r\n          if (user.value) {\r\n            if (user.value.password === req.body.password) {\r\n              res.json({login:'success', response: user.value});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });\r\n      /*\r\n      db.collection('users').findOne({name:req.body.name}, (err, user) => {\r\n\r\n          if (err) {res.json(err);}\r\n\r\n          if (user) {\r\n            if (user.password === req.body.password) {\r\n              res.json({login:'success', response: user});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });*/\r\n\r\n  });\r\n\r\n  app.get('*', (req,res) => {\r\n    res.send('no match');\r\n\r\n  });\r\n\r\n  app.listen(3000, function(){\r\n    console.log('App started on port 3000');\r\n  });\r\n\r\n});"]}