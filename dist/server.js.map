{"version":3,"sources":["../server/server.js"],"names":["install","dbUrl","connect","err","db","app","use","static","json","post","req","res","collection","find","name","body","toArray","user","length","status","send","insertOne","newUser","userCopy","polls","filter","poll","id","findAndModify","$set","new","upsert","result","deleteOne","toString","owner","$push","$inc","counter","get","params","map","choices","choice","answer","votes","result2","console","dir","loggedIn","value","password","login","response","listen","log"],"mappings":";;AACA;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AAPA;AAGA,2BAAiBA,OAAjB;;AAOA;AACA,IAAIC,QAAQ,2BAAZ,C,CAAyC;;AAEzC,qBAAYC,OAAZ,CAAoBD,KAApB,EAA2B,UAACE,GAAD,EAAMC,EAAN,EAAa;AACtC,MAAID,GAAJ,EAAS;AAAC,WAAOA,GAAP;AAAW;;AAErB,MAAME,MAAM,wBAAZ;;AAEAA,MAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,MAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEA;;AAEAH,MAAII,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;;AAEhCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAACC,MAAKJ,IAAIK,IAAJ,CAASD,IAAf,EAA5B,EAAkDE,OAAlD,CAA0D,UAACb,GAAD,EAAMc,IAAN,EAAe;AACvE,UAAIA,KAAKC,MAAL,GAAc,CAAlB,EAAqB;AAChBP,YAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,KAArB;AACD,OAFJ,MAGK;AACDhB,WAAGQ,UAAH,CAAc,OAAd,EAAuBS,SAAvB,CAAiCX,IAAIK,IAArC,EAA2C,UAACZ,GAAD,EAAMmB,OAAN,EAAkB;AAC3DX,cAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB;AACD,SAFD;AAGH;AACF,KATD;AAUD,GAZD;;AAcF;;;AAGCf,MAAII,IAAJ,CAAS,qBAAT,EAAgC,UAACC,GAAD,EAAKC,GAAL,EAAa;AACxCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAACC,MAAMJ,IAAIK,IAAJ,CAASD,IAAhB,EAA5B,EACCE,OADD,CACS,UAACb,GAAD,EAAKc,IAAL,EAAc;AACrB,UAAId,GAAJ,EAAS,OAAOA,GAAP;;AAET,UAAIoB,WAAWN,IAAf;;AAEAM,eAAS,CAAT,EAAYC,KAAZ,GAAoBD,SAAS,CAAT,EAAYC,KAAZ,CAAkBC,MAAlB,CAAyB,UAACC,IAAD,EAAU;AACrD,YAAIA,KAAKC,EAAL,IAAWjB,IAAIK,IAAJ,CAASY,EAAxB,EAA4B;AAC1B,iBAAOD,IAAP;AACD;AACF,OAJmB,CAApB;;AAMAtB,SAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACE,EAACd,MAAMJ,IAAIK,IAAJ,CAASD,IAAhB,EADF,EAEE,EAFF,EAGE,EAACe,MAAK,EAACL,OAAMD,SAAS,CAAT,EAAYC,KAAnB,EAAN,EAHF,EAIE,EAACM,KAAI,IAAL,EAJF,EAKE,EAACC,QAAO,IAAR,EALF,EAME,UAAS5B,GAAT,EAAc6B,MAAd,EAAsB;AACpB,YAAI7B,GAAJ,EAAS,OAAOA,GAAP;AACTQ,YAAIS,IAAJ,CAASY,MAAT;AACD,OATH;AAWD,KAvBD;AAwBH,GAzBF;;AA2BC;AACA3B,MAAII,IAAJ,CAAS,mBAAT,EAA6B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACnCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBqB,SAAvB,CACC,EAACN,IAAIjB,IAAIK,IAAJ,CAASY,EAAT,CAAYO,QAAZ,EAAL,EAA6BC,OAAMzB,IAAIK,IAAJ,CAASD,IAA5C,EADD,EAEC,UAASX,GAAT,EAAa6B,MAAb,EAAqB;AACnB,UAAG7B,GAAH,EAAQ;AAAC,eAAOA,GAAP;AAAW;AACrB,KAJF;AAMN,GAPD;;AASF;;AAEEE,MAAII,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC9BP,OAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACI,EAACd,MAAMJ,IAAIK,IAAJ,CAASoB,KAAhB,EADJ,EAEI,EAFJ,EAES;AACL,MAACC,OAAM,EAACZ,OAAMd,IAAIK,IAAX,EAAP,EAAyBsB,MAAK,EAACC,SAAQ,CAAT,EAA9B,EAHJ,EAII,EAACP,QAAO,IAAR,EAJJ,EAKI,UAAS5B,GAAT,EAAa6B,MAAb,EAAqB;AACnB,UAAG7B,GAAH,EAAQ;AAAC,eAAOA,GAAP;AAAW;AACpBQ,UAAIS,IAAJ,CAASY,MAAT;AACD,KARL;AAUH,GAXD;;AAaA;AACA3B,MAAII,IAAJ,CAAS,eAAT,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/BP,OAAGQ,UAAH,CAAc,OAAd,EAAuBS,SAAvB,CACCX,IAAIK,IADL,EAEC,UAACZ,GAAD,EAAK6B,MAAL,EAAgB;AACd,UAAI7B,GAAJ,EAAS;AAAC,eAAOA,GAAP;AAAW;AACrBQ,UAAIS,IAAJ,CAASY,MAAT;AACD,KALF;AAON,GARD;;AAWF;;AAEE;AACA3B,MAAIkC,GAAJ,CAAQ,cAAR,EAAwB,UAAC7B,GAAD,EAAKC,GAAL,EAAa;AACjCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAA5B,EAAgCG,OAAhC,CAAwC,UAACb,GAAD,EAAK6B,MAAL,EAAgB;AACtD,UAAI7B,GAAJ,EAAS;AAAC,eAAOA,GAAP;AAAW;AACrBQ,UAAIS,IAAJ,CAASY,MAAT;AACD,KAHD;AAIH,GALD;;AAOA3B,MAAIkC,GAAJ,CAAQ,iBAAR,EAA2B,UAAC7B,GAAD,EAAKC,GAAL,EAAa;AACpCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAACsB,OAAMzB,IAAI8B,MAAJ,CAAW1B,IAAlB,EAAwBa,IAAGjB,IAAI8B,MAAJ,CAAWb,EAAtC,EAA5B,EAAuEX,OAAvE,CAA+E,UAACb,GAAD,EAAK6B,MAAL,EAAgB;AAC7F,UAAI7B,GAAJ,EAAS;AAAC,eAAOA,GAAP;AAAW;AACrBQ,UAAIS,IAAJ,CAASY,MAAT;AACD,KAHD;AAIH,GALD;;AAOF;;AAEE3B,MAAII,IAAJ,CAAS,qBAAT,EAAgC,UAACC,GAAD,EAAKC,GAAL,EAAa;AACzCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAACC,MAAKJ,IAAIK,IAAJ,CAASD,IAAf,EAA5B,EAAkDE,OAAlD,CAA0D,UAACb,GAAD,EAAKc,IAAL,EAAc;AACtE,UAAId,GAAJ,EAAS,OAAOA,GAAP;;AAET,UAAIoB,WAAWN,IAAf;AACAM,eAAS,CAAT,EAAYC,KAAZ,CAAkBiB,GAAlB,CAAsB,UAACf,IAAD,EAAU;AAC7B,YAAIA,KAAKC,EAAL,KAAYjB,IAAIK,IAAJ,CAASY,EAAzB,EAA6B;AAC1BD,eAAKgB,OAAL,CAAaD,GAAb,CAAkB,kBAAU;AAC1B,gBAAIE,OAAOA,MAAP,KAAkBjC,IAAIK,IAAJ,CAAS6B,MAA/B,EAAuC;AACrCD,qBAAOE,KAAP;AACD;AACF,WAJD;AAKF;AACH,OARD;;AAUAzC,SAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACE,EAACd,MAAMJ,IAAIK,IAAJ,CAASD,IAAhB,EADF,EAEE,EAFF,EAGE,EAACe,MAAK,EAACL,OAAMD,SAAS,CAAT,EAAYC,KAAnB,EAAN,EAHF,EAIE,EAACM,KAAI,IAAL,EAJF,EAKE,EAACC,QAAO,IAAR,EALF,EAME,UAAS5B,GAAT,EAAc6B,MAAd,EAAsB;AACpB,YAAI7B,GAAJ,EAAS,OAAOA,GAAP;AACV;AACA,OATH;AAYD,KA1BD;AA6BH,GA9BD;;AAgCAE,MAAII,IAAJ,CAAS,mBAAT,EAA8B,UAACC,GAAD,EAAKC,GAAL,EAAa;AACtCP,OAAGQ,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CACC,EAAC,kBAAiBH,IAAIK,IAAJ,CAAS6B,MAA3B,EADD,EAEC5B,OAFD,CAGG,UAACb,GAAD,EAAM6B,MAAN,EAAiB;AACf,UAAI7B,GAAJ,EAAS,OAAOA,GAAP;AACT,UAAIuB,OAAOM,MAAX;;AAEAN,WAAK,CAAL,EAAQgB,OAAR,CAAgBD,GAAhB,CAAoB,UAACG,MAAD,EAAY;AAC9B,YAAIA,OAAOD,MAAP,KAAkBjC,IAAIK,IAAJ,CAAS6B,MAA/B,EAAuC;AACrCA,iBAAOC,KAAP;AACD;AACF,OAJD;;AAMAzC,SAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACI,EAAC,kBAAiBlB,IAAIK,IAAJ,CAAS6B,MAA3B,EADJ,EAEI,EAFJ,EAGI,EAACf,MAAK,EAACa,SAAShB,KAAK,CAAL,EAAQgB,OAAlB,EAAN,EAHJ,EAII,EAACZ,KAAI,IAAL,EAJJ,EAKI,EAACC,QAAO,IAAR,EALJ,EAMI,UAAS5B,GAAT,EAAc2C,OAAd,EAAuB;AACrB,YAAI3C,GAAJ,EAAS;AAAC4C,kBAAQC,GAAR,CAAY7C,GAAZ;AAAkB;AAC5BQ,YAAIS,IAAJ,CAAS0B,OAAT;AACD,OATL;AAWD,KAxBJ;AA0BJ,GA3BD;;AA6BF;;AAEEzC,MAAII,IAAJ,CAAS,SAAT,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC7BP,OAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACI,EAACd,MAAMJ,IAAIK,IAAJ,CAASD,IAAhB,EADJ,EAEI,EAFJ,EAES;AACL,MAACe,MAAM,EAACoB,UAAS,KAAV,EAAP,EAHJ,EAII,EAAClB,QAAO,IAAR,EAJJ,EAKI,UAAS5B,GAAT,EAAa6B,MAAb,EAAqB;AACnB,UAAG7B,GAAH,EAAQ;AAAC,eAAOA,GAAP;AAAW;AACpBQ,UAAIS,IAAJ,CAASY,MAAT;AACA,KARN;AAUH,GAXD;AAYF;AACE3B,MAAII,IAAJ,CAAS,QAAT,EAAmB,UAACC,GAAD,EAAKC,GAAL,EAAa;;AAE3BP,OAAGQ,UAAH,CAAc,OAAd,EAAuBgB,aAAvB,CACG,EAACd,MAAKJ,IAAIK,IAAJ,CAASD,IAAf,EADH,EAEG,EAFH,EAGG,EAACe,MAAM,EAACoB,UAAS,IAAV,EAAP,EAHH,EAG4B;AACzB,MAACnB,KAAI,IAAL,EAJH,EAKG,UAAC3B,GAAD,EAAMc,IAAN,EAAe;AACf,UAAId,GAAJ,EAAS;AAACQ,YAAIH,IAAJ,CAASL,GAAT;AAAe;;AAEzB,UAAIc,KAAKiC,KAAT,EAAgB;AACd,YAAIjC,KAAKiC,KAAL,CAAWC,QAAX,KAAwBzC,IAAIK,IAAJ,CAASoC,QAArC,EAA+C;AAC7CxC,cAAIH,IAAJ,CAAS,EAAC4C,OAAM,SAAP,EAAkBC,UAAUpC,KAAKiC,KAAjC,EAAT;AACD,SAFD,MAGK;AACHvC,cAAIH,IAAJ,CAAS,EAAC4C,OAAM,MAAP,EAAeC,UAAU,kBAAzB,EAAT;AACD;AACF,OAPD,MAQK;AACD1C,YAAIH,IAAJ,CAAS,EAAC4C,OAAM,MAAP,EAAeC,UAAU,cAAzB,EAAT;AACH;AACJ,KAnBA;AAoBD;;;;;;;;;;;;;;;AAkBH,GAxCD;;AA0CAhD,MAAIkC,GAAJ,CAAQ,GAAR,EAAa,UAAC7B,GAAD,EAAKC,GAAL,EAAa;AACxBA,QAAIS,IAAJ,CAAS,UAAT;AAED,GAHD;;AAKAf,MAAIiD,MAAJ,CAAW,IAAX,EAAiB,YAAU;AACzBP,YAAQQ,GAAR,CAAY,0BAAZ;AACD,GAFD;AAID,CA7OD","file":"server.js","sourcesContent":["//'use strict'\r\nimport 'babel-polyfill';\r\nimport SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport {MongoClient} from 'mongodb';\r\n\r\n\r\n//let dbUrl = 'mongodb://127.0.0.1:27017/mydb'; //local db\r\nlet dbUrl = 'mongodb://localhost/local'; //local db\r\n\r\nMongoClient.connect(dbUrl, (err, db) => {\r\n  if (err) {return err};\r\n\r\n  const app = express();\r\n\r\n  app.use(express.static('static'));\r\n  app.use(bodyParser.json());\r\n\r\n  //***************ADD NEW USER********************\r\n\r\n  app.post('/addUser', (req,res) => {\r\n\r\n    db.collection('users').find({name:req.body.name}).toArray((err, user) => {\r\n      if (user.length > 0) {\r\n           res.status(400).send(false);\r\n         }\r\n      else {\r\n          db.collection('users').insertOne(req.body, (err, newUser) => {\r\n            res.status(201).send(true);\r\n          });\r\n      }\r\n    });\r\n  });\r\n\r\n//**************DELETE POLL***************************\r\n\r\n\r\n app.post('/deletePollForUsers', (req,res) => {\r\n      db.collection('users').find({name: req.body.name})\r\n      .toArray((err,user) => {\r\n        if (err) return err;\r\n\r\n        let userCopy = user;\r\n\r\n        userCopy[0].polls = userCopy[0].polls.filter((poll) => {\r\n          if (poll.id != req.body.id) {\r\n            return poll;\r\n          }\r\n        });\r\n\r\n        db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},\r\n          {$set:{polls:userCopy[0].polls}},\r\n          {new:true},\r\n          {upsert:true},\r\n          function(err, result) {\r\n            if (err) return err;\r\n            res.send(result);\r\n          }\r\n          );\r\n      });\r\n  });\r\n\r\n  //delete polls from collective list\r\n  app.post('/deletePollForAll',(req,res) => {\r\n         db.collection('polls').deleteOne(\r\n          {id: req.body.id.toString(), owner:req.body.name},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n          }\r\n      );\r\n  });\r\n\r\n//**************ADD POLL***************************\r\n\r\n  app.post('/addPoll', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.owner},\r\n          {},  //this must be here to work\r\n          {$push:{polls:req.body}, $inc:{counter:1}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n          }\r\n      );\r\n  });\r\n\r\n  //adds polls to collective list\r\n  app.post('/addPollToAll',(req,res) => {\r\n         db.collection('polls').insertOne(\r\n          req.body,\r\n          (err,result) => {\r\n            if (err) {return err};\r\n            res.send(result);\r\n          }\r\n       );\r\n  });\r\n\r\n\r\n//**************GET POLLS***************************\r\n\r\n  //returns all user polls\r\n  app.get('/getAllPolls', (req,res) => {\r\n      db.collection('polls').find({}).toArray((err,result) => {\r\n        if (err) {return err};\r\n        res.send(result);\r\n      });\r\n  });\r\n\r\n  app.get('/poll/:name/:id', (req,res) => {\r\n      db.collection('polls').find({owner:req.params.name, id:req.params.id}).toArray((err,result) => {\r\n        if (err) {return err};\r\n        res.send(result);\r\n      });\r\n  });\r\n\r\n//**************ANSWER POLL***************************\r\n\r\n  app.post('/answerPollForUsers', (req,res) => {\r\n      db.collection('users').find({name:req.body.name}).toArray((err,user) => {\r\n        if (err) return err;\r\n\r\n        let userCopy = user;\r\n        userCopy[0].polls.map((poll) => {\r\n           if (poll.id === req.body.id) {\r\n              poll.choices.map((choice => {\r\n                if (choice.choice === req.body.answer) {\r\n                  choice.votes++;\r\n                }\r\n              }));\r\n           }\r\n        });\r\n\r\n        db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},\r\n          {$set:{polls:userCopy[0].polls}},\r\n          {new:true},\r\n          {upsert:true},\r\n          function(err, result) {\r\n            if (err) return err;\r\n           // res.send(result);\r\n          }\r\n          );\r\n\r\n      });\r\n\r\n\r\n  });\r\n\r\n  app.post('/answerPollForAll', (req,res) => {\r\n       db.collection('polls').find(\r\n        {\"choices.choice\":req.body.answer})\r\n       .toArray(\r\n          (err, result) => {\r\n            if (err) return err;\r\n            let poll = result;\r\n\r\n            poll[0].choices.map((answer) => {\r\n              if (answer.choice === req.body.answer) {\r\n                answer.votes++;\r\n              }\r\n            });\r\n\r\n            db.collection('polls').findAndModify(\r\n                {\"choices.choice\":req.body.answer},\r\n                {},\r\n                {$set:{choices: poll[0].choices}},\r\n                {new:true},\r\n                {upsert:true},\r\n                function(err, result2) {\r\n                  if (err) {console.dir(err);};\r\n                  res.send(result2);\r\n                }\r\n            );\r\n          }\r\n        );\r\n  });\r\n\r\n//**************LOG OUT***************************\r\n\r\n  app.post('/logOut', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},  //this must be here to work\r\n          {$set: {loggedIn:false}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n           }\r\n      );\r\n  });\r\n//**************LOG IN***************************\r\n  app.post('/logIn', (req,res) => {\r\n\r\n       db.collection('users').findAndModify(\r\n          {name:req.body.name},\r\n          {},\r\n          {$set: {loggedIn:true}}, //true is being set for correct login but wrong password\r\n          {new:true},\r\n          (err, user) => {\r\n          if (err) {res.json(err);}\r\n\r\n          if (user.value) {\r\n            if (user.value.password === req.body.password) {\r\n              res.json({login:'success', response: user.value});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });\r\n      /*\r\n      db.collection('users').findOne({name:req.body.name}, (err, user) => {\r\n\r\n          if (err) {res.json(err);}\r\n\r\n          if (user) {\r\n            if (user.password === req.body.password) {\r\n              res.json({login:'success', response: user});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });*/\r\n\r\n  });\r\n\r\n  app.get('*', (req,res) => {\r\n    res.send('no match');\r\n\r\n  });\r\n\r\n  app.listen(3000, function(){\r\n    console.log('App started on port 3000');\r\n  });\r\n\r\n});"]}