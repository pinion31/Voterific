{"version":3,"sources":["../server/server.js"],"names":["install","dbUrl","connect","err","db","console","log","app","use","static","json","post","req","res","collection","insertOne","body","send","findAndModify","name","owner","$push","polls","$inc","counter","upsert","result","get","find","toArray","dir","$set","loggedIn","new","user","value","password","login","response","listen"],"mappings":"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","file":"server.js","sourcesContent":["//'use strict'\r\nimport 'babel-polyfill';\r\nimport SourceMapSupport from 'source-map-support';\r\nSourceMapSupport.install();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport {MongoClient} from 'mongodb';\r\n\r\n\r\n//let dbUrl = 'mongodb://127.0.0.1:27017/mydb'; //local db\r\nlet dbUrl = 'mongodb://localhost/local'; //local db\r\n\r\nMongoClient.connect(dbUrl, (err, db) => {\r\n  if (err) {return err};\r\n\r\n  console.log('db connected');\r\n\r\n\r\n  const app = express();\r\n\r\n  app.use(express.static('static'));\r\n  app.use(bodyParser.json());\r\n\r\n  app.post('/addUser', (req,res) => {\r\n\r\n    db.collection('users').insertOne(req.body, () => {\r\n      console.log('new user added to database');\r\n      res.send('user added');\r\n    });\r\n  });\r\n\r\n  app.post('/addPoll', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.owner},\r\n          {},  //this must be here to work\r\n          {$push:{polls:req.body}, $inc:{counter:1}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n          }\r\n      );\r\n  });\r\n\r\n  //adds polls to collective list\r\n  app.post('/addPollToAll',(req,res) => {\r\n         db.collection('polls').insertOne(\r\n          req.body,\r\n          (err,result) => {\r\n            if (err) {return err};\r\n            res.send(result);\r\n          }\r\n       );\r\n  });\r\n\r\n  //returns all user polls\r\n  app.get('/getAllPolls', (req,res) => {\r\n     /* db.collection('polls').find({}).toArray((err, polls) => {\r\n        if (err) {return err;}\r\n        //console.dir(polls);\r\n\r\n        res.send(polls);\r\n      });*/\r\n\r\n      db.collection('polls').find({}).toArray((err,result) => {\r\n        if (err) {return err};\r\n        console.dir(result);\r\n        res.send(result);\r\n      });\r\n\r\n\r\n  });\r\n\r\n  app.post('/logOut', (req,res) => {\r\n      db.collection('users').findAndModify(\r\n          {name: req.body.name},\r\n          {},  //this must be here to work\r\n          {$set: {loggedIn:false}},\r\n          {upsert:true},\r\n          function(err,result) {\r\n            if(err) {return err};\r\n            res.send(result);\r\n           }\r\n      );\r\n  });\r\n\r\n  app.post('/logIn', (req,res) => {\r\n\r\n       db.collection('users').findAndModify(\r\n          {name:req.body.name},\r\n          {},\r\n          {$set: {loggedIn:true}}, //true is being set for correct login but wrong password\r\n          {new:true},\r\n          (err, user) => {\r\n          if (err) {res.json(err);}\r\n\r\n          if (user.value) {\r\n            if (user.value.password === req.body.password) {\r\n              res.json({login:'success', response: user.value});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });\r\n      /*\r\n      db.collection('users').findOne({name:req.body.name}, (err, user) => {\r\n\r\n          if (err) {res.json(err);}\r\n\r\n          if (user) {\r\n            if (user.password === req.body.password) {\r\n              res.json({login:'success', response: user});\r\n            }\r\n            else {\r\n              res.json({login:'fail', response: 'Invalid Password'});\r\n            }\r\n          }\r\n          else {\r\n              res.json({login:'fail', response: 'Invalid User'});\r\n          }\r\n      });*/\r\n\r\n  });\r\n\r\n  app.get('*', (req,res) => {\r\n    res.send('no match');\r\n\r\n  });\r\n\r\n  app.listen(3000, function(){\r\n    console.log('App started on port 3000');\r\n  });\r\n\r\n});"]}