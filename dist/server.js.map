{"version":3,"sources":["../server/server.js"],"names":["install","dbUrl","process","env","MONGOLAB_URI","connect","err","db","app","use","static","json","post","req","res","collection","find","name","body","toArray","user","length","status","send","insertOne","userCopy","polls","filter","poll","id","findAndModify","$set","new","upsert","result","deleteOne","toString","owner","$push","$inc","counter","get","params","map","choices","choice","answer","votes","result2","console","dir","loggedIn","value","password","login","response","listen","log"],"mappings":"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","file":"server.js","sourcesContent":["// 'use strict'\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport {MongoClient} from 'mongodb';\n\nSourceMapSupport.install();\n\n// const dbUrl = 'mongodb://localhost/local'; // local db\nconst dbUrl = process.env.MONGOLAB_URI; // production db\n\nMongoClient.connect(dbUrl, (err, db) => {\n  if (err) { return err; }\n\n  const app = express();\n\n  app.use(express.static('static'));\n  app.use(bodyParser.json());\n\n  //* **************ADD NEW USER********************\n  app.post('/addUser', (req, res) => {\n    db.collection('users').find({name: req.body.name}).toArray((err, user) => {\n      if (err) return err;\n      if (user.length > 0) {\n        res.status(400).send(false);\n      } else {\n        db.collection('users').insertOne(req.body, () => {\n          res.status(201).send(true);\n        });\n      }\n    });\n  });\n\n  //* *************DELETE POLL***************************\n  app.post('/deletePollForUsers', (req, res) => {\n    db.collection('users').find({name: req.body.name})\n      .toArray((err, user) => {\n        if (err) return err;\n\n        const userCopy = user;\n\n        userCopy[0].polls = userCopy[0].polls.filter((poll) => {\n          if (poll.id !== req.body.id) {\n            return poll;\n          }\n        });\n\n        db.collection('users').findAndModify(\n          {name: req.body.name},\n          {},\n          {$set: {polls: userCopy[0].polls}},\n          {new: true},\n          {upsert: true},\n          (err, result) => {\n            if (err) return err;\n            res.send(result);\n          },\n        );\n      });\n  });\n\n  // delete polls from collective list\n  app.post('/deletePollForAll', (req) => {\n    db.collection('polls').deleteOne(\n      {id: req.body.id.toString(), owner: req.body.name},\n      (err) => {\n        if (err) { return err; }\n      },\n    );\n  });\n\n  //* *************ADD POLL***************************\n\n  app.post('/addPoll', (req, res) => {\n    db.collection('users').findAndModify(\n      {name: req.body.owner},\n      {}, // this must be here to work\n      {$push: {polls: req.body}, $inc: {counter: 1}},\n      {upsert: true},\n      (err, result) => {\n        if (err) { return err; }\n        res.send(result);\n      },\n    );\n  });\n\n  // adds polls to collective list\n  app.post('/addPollToAll', (req, res) => {\n    db.collection('polls').insertOne(\n      req.body,\n      (err, result) => {\n        if (err) { return err; }\n        res.send(result);\n      },\n    );\n  });\n\n  //* *************GET POLLS***************************\n\n  // returns all user polls\n  app.get('/getAllPolls', (req, res) => {\n    db.collection('polls').find({}).toArray((err, result) => {\n      if (err) { return err; }\n      res.send(result);\n    });\n  });\n\n  app.get('/poll/:name/:id', (req, res) => {\n    db.collection('polls').find({owner: req.params.name, id: req.params.id}).toArray((err, result) => {\n      if (err) { return err; }\n      res.send(result);\n    });\n  });\n\n  //* *************ANSWER POLL***************************\n\n  app.post('/answerPollForUsers', (req) => {\n    db.collection('users').find({name: req.body.name}).toArray((err, user) => {\n      if (err) return err;\n\n      const userCopy = user;\n      userCopy[0].polls.map((poll) => {\n        if (poll.id === req.body.id) {\n          poll.choices.map(((choice) => {\n            if (choice.choice === req.body.answer) {\n              choice.votes++;\n            }\n          }));\n        }\n      });\n\n      db.collection('users').findAndModify(\n        {name: req.body.name},\n        {},\n        {$set: {polls: userCopy[0].polls}},\n        {new: true},\n        {upsert: true},\n        (err) => {\n          if (err) return err;\n        },\n      );\n    });\n  });\n\n  app.post('/answerPollForAll', (req, res) => {\n    db.collection('polls').find(\n      {'choices.choice': req.body.answer})\n      .toArray(\n        (err, result) => {\n          if (err) return err;\n          const poll = result;\n\n          poll[0].choices.map((answer) => {\n            if (answer.choice === req.body.answer) {\n              answer.votes++;\n            }\n          });\n\n          db.collection('polls').findAndModify(\n            {'choices.choice': req.body.answer},\n            {},\n            {$set: {choices: poll[0].choices}},\n            {new: true},\n            {upsert: true},\n            (err, result2) => {\n              if (err) { console.dir(err); }\n              res.send(result2);\n            },\n          );\n        },\n      );\n  });\n\n  //* *************LOG OUT***************************\n\n  app.post('/logOut', (req, res) => {\n    db.collection('users').findAndModify(\n      {name: req.body.name},\n      {}, // this must be here to work\n      {$set: {loggedIn: false}},\n      {upsert: true},\n      (err, result) => {\n        if (err) { return err; }\n        res.send(result);\n      },\n    );\n  });\n  //* *************LOG IN***************************\n  app.post('/logIn', (req, res) => {\n    db.collection('users').findAndModify(\n      {name: req.body.name},\n      {},\n      {$set: {loggedIn: true}},\n      {new: true},\n      (err, user) => {\n        if (err) { res.json(err); }\n\n        if (user.value) {\n          if (user.value.password === req.body.password) {\n            res.json({login: 'success', response: user.value});\n          } else {\n            res.json({login: 'fail', response: 'Invalid Password'});\n          }\n        } else {\n          res.json({login: 'fail', response: 'Invalid User'});\n        }\n      });\n  });\n\n  app.get('*', (req, res) => {\n    res.send('no match');\n  });\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n});\n"]}